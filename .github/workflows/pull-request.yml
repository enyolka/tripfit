name: Pull Request Workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
        env:
          CI: true

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests with coverage
        run: npm run test:coverage
        env:
          CI: true
      
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-coverage
          path: |
            coverage/
            coverage/**/*
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Playwright browsers
        uses: microsoft/playwright-github-action@v1
      
      - name: Install Playwright browsers
        run: npx playwright install chromium
      
      - name: Build project
        run: npm run build
        env:
          CI: true
      
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          CI: true
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      
      - name: Upload E2E test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  status-comment:
    name: Update PR Status
    needs: [lint, unit-test, e2e-test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create status comment
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            const jobStatus = context.job.status;
            
            // Get workflow run details
            const runId = context.runId;
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;
            
            // Create status message
            let statusIcon = '✅';
            let statusMessage = 'All checks passed!';
            
            if ('${{ needs.lint.result }}' !== 'success' || 
                '${{ needs.unit-test.result }}' !== 'success' || 
                '${{ needs.e2e-test.result }}' !== 'success') {
              statusIcon = '❌';
              statusMessage = 'Some checks failed. Please review the pipeline results.';
            }
            
            // Create comment body
            const commentBody = `## Pull Request Status: ${statusIcon} ${statusMessage}
            
            | Job | Status |
            | --- | --- |
            | Lint | ${{ needs.lint.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | Unit Tests | ${{ needs.unit-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | E2E Tests | ${{ needs.e2e-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            
            [View detailed run](${runUrl})
            `;
            
            // Post comment to PR
            const issue_number = context.payload.pull_request.number;
            github.rest.issues.createComment({
              issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
